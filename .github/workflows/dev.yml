name: Deploy Dev
on:
  push:
    branches: [ dev ]

env: 
  AWS_REGION: us-east-2
  ECR_REPOSITORY: sacred-relay

jobs:

  deploy:
    runs-on: ubuntu-latest 
    steps:
      - name: checkout latest
        uses: actions/checkout@v2 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Build images
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Update Deploy File
        uses: appleboy/scp-action@master
        with:
          key: ${{ secrets.AWS_PK  }}
          host: ${{ secrets.HOSTS_DEV }}
          username: ${{ secrets.AWS_USER }}
          source: "docker-compose-dev.yml"
          target: "relay-deploy"

      - name: Set Env and Redeploy
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.AWS_PK }}
          host: ${{ secrets.HOSTS_DEV }}
          username: ${{ secrets.AWS_USER }}
          script: |
            export KOVAN_PK=${{ secrets.KOVAN_PK_DEV }}
            export RINKEBY_PK=${{ secrets.RINKEBY_PK_DEV }}
            export MAINNET_PK=${{ secrets.MAINNET_PK_DEV }}
            export ALCHEMY_KEY=${{ secrets.ALCHEMY_KEY_DEV }}
            export AWS_REGION=${{ env.AWS_REGION }}
            export AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
            export RELAY_IMAGE=${{ steps.build-image.outputs.image }}
            aws configure set region ${{ env.AWS_REGION }}
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
            docker compose -f relay-deploy/docker-compose-dev.yml up -d
