version: '2'

services:
  kovan:
    image: 020804786333.dkr.ecr.us-east-2.amazonaws.com/sacred-relay:latest
    restart: always
    environment:
      VIRTUAL_HOST: kovan.localhost
      SELF_SIGNED_HOST: kovan.localhost
      LETSENCRYPT_HOST: kovan.localhost
      NET_ID: 42
      RPC_URL: https://eth-kovan.alchemyapi.io/v2/${ALCHEMY_KEY}
      # ORACLE_RPC_URL should always point to the mainnet
      ORACLE_RPC_URL: https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}
      # without 0x prefix
      PRIVATE_KEY: ${KOVAN_PK}
      # 2.5 means 2.5%
      RELAYER_FEE: 1
      REDIS_URL: redis://redis/0
      TIMEOUT: 15000
      nginx_proxy_read_timeout: 600
      APP_PORT: 8000
      NONCE_WATCHER_INTERVAL: 30
      ALLOWABLE_PENDING_TX_TIMEOUT: 180
      MAX_GAS_PRICE: 200
      GAS_PRICE_BUMP_PERCENTAGE: 20

    depends_on:
      - redis

  rinkeby:
    image: 020804786333.dkr.ecr.us-east-2.amazonaws.com/sacred-relay:latest
    restart: always
    environment:
      VIRTUAL_HOST: rinkeby.localhost
      SELF_SIGNED_HOST: rinkeby.localhost
      LETSENCRYPT_HOST: rinkeby.localhost
      NET_ID: 4
      RPC_URL: https://eth-rinkeby.alchemyapi.io/v2/${ALCHEMY_KEY}
      # ORACLE_RPC_URL should always point to the mainnet
      ORACLE_RPC_URL: https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}
      # without 0x prefix
      PRIVATE_KEY: ${RINKEBY_PK}
      # 2.5 means 2.5%
      RELAYER_FEE: 1
      REDIS_URL: redis://redis/1
      TIMEOUT: 15000
      nginx_proxy_read_timeout: 600
      APP_PORT: 8000
      NONCE_WATCHER_INTERVAL: 30
      ALLOWABLE_PENDING_TX_TIMEOUT: 180
      MAX_GAS_PRICE: 200
      GAS_PRICE_BUMP_PERCENTAGE: 20

    depends_on:
      - redis

  mainnet:
    image: 020804786333.dkr.ecr.us-east-2.amazonaws.com/sacred-relay:latest
    restart: always
    environment:
      VIRTUAL_HOST: mainnet.localhost
      SELF_SIGNED_HOST: mainnet.localhost
      LETSENCRYPT_HOST: mainnet.localhost
      NET_ID: 1
      RPC_URL: https://eth.alchemyapi.io/v2/${ALCHEMY_KEY}
      # ORACLE_RPC_URL should always point to the mainnet
      ORACLE_RPC_URL: https://eth.alchemyapi.io/v2/${ALCHEMY_KEY}
      # without 0x prefix
      PRIVATE_KEY: ${MAINNET_PK}
      # 2.5 means 2.5%
      RELAYER_FEE: 1
      REDIS_URL: redis://redis/2
      TIMEOUT: 15000
      nginx_proxy_read_timeout: 600
      APP_PORT: 8000
      NONCE_WATCHER_INTERVAL: 30
      ALLOWABLE_PENDING_TX_TIMEOUT: 180
      MAX_GAS_PRICE: 200
      GAS_PRICE_BUMP_PERCENTAGE: 20

    depends_on:
      - redis

  #  # this container will proxy *.onion domain to the mainnet container
  #  tor:
  #    image: strm/tor
  #    restart: always
  #    depends_on: [mainnet]
  #    environment:
  #      LISTEN_PORT: 80
  #      REDIRECT: mainnet:8000
  #      # Generate a new key with
  #      # docker run --rm --entrypoint shallot strm/tor-hiddenservice-nginx ^foo
  #      PRIVATE_KEY: |
  #        -----BEGIN RSA PRIVATE KEY-----
  #        ...
  #        -----END RSA PRIVATE KEY-----

  #  # auto update docker containers when new image is pushed to docker hub (be careful with that)
  #  watchtower:
  #    image: v2tec/watchtower
  #    restart: always
  #    volumes:
  #      - /var/run/docker.sock:/var/run/docker.sock

  #  # this container will send Telegram notifications when other containers are stopped/restarted
  #  # it's best to run this container on some other instance, otherwise it can't notify if the whole instance goes down
  #  notifier:
  #    image: poma/docker-telegram-notifier
  #    restart: always
  #    volumes:
  #      - /var/run/docker.sock:/var/run/docker.sock:ro
  #    environment:
  #      # How to create bot: https://core.telegram.org/bots#3-how-do-i-create-a-bot
  #      # How to get chat id: https://stackoverflow.com/questions/32423837/telegram-bot-how-to-get-a-group-chat-id/32572159#32572159
  #      TELEGRAM_NOTIFIER_BOT_TOKEN: ...
  #      TELEGRAM_NOTIFIER_CHAT_ID: ...

  #  # this container will send Telegram notifications if specified address doesn't have enough funds
  #  monitor_mainnet:
  #    image: peppersec/monitor_eth
  #    restart: always
  #    environment:
  #      TELEGRAM_NOTIFIER_BOT_TOKEN: ...
  #      TELEGRAM_NOTIFIER_CHAT_ID: ...
  #      ADDRESS: '0x0000000000000000000000000000000000000000'
  #      THRESHOLD: 0.5 # ETH
  #      RPC_URL: https://mainnet.infura.io
  #      BLOCK_EXPLORER: etherscan.io

  redis:
    image: redis
    restart: always
    command: [redis-server, --appendonly, 'yes', '--port', '6379']
    ports:
      - 6379:6379
    volumes:
      - redis:/data

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
    
  dockergen:
    image: poma/docker-gen
    container_name: dockergen
    restart: always
    command: -notify-sighup nginx -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  proxy-companion:        
    container_name: proxy-companion
    restart: always
    image: sebastienheyd/self-signed-proxy-companion
    volumes_from:
        - nginx
        - dockergen
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  # letsencrypt:
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   container_name: letsencrypt
  #   restart: always
  #   environment:
  #     NGINX_DOCKER_GEN_CONTAINER: dockergen
  #   volumes_from:
  #     - nginx
  #     - dockergen

volumes:
  conf:
  vhost:
  html:
  certs:
  redis:
